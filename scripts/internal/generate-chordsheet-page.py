#!/bin/python3
# $ ./generate-chordsheet-page.py [<outfile> [<chord-modifiers>]]
# e.g. $ ./generate-chordsheet-page.py ./src/chord.tex maj,sus2

import sys
import csv
import collections

COLUMN_SEP = ' &\n'
ROW_SEP = ' \\\\\n\n'
_, OUTFILE, CHORD_MODIFIERS, *_ = [*sys.argv, False, False]

def process_row(row):
    stripped_row = collections.OrderedDict(map(lambda kv: (kv[0].strip(), kv[1].strip()), row.items()))
    base_human = stripped_row.pop('base_human')
    base_tex = stripped_row.pop('base_tex')
    chords = stripped_row
    modifiers = CHORD_MODIFIERS.split(',') if CHORD_MODIFIERS else chords.keys()
    columns = [base_human] + [process_chord(base_tex, mod, chords[mod]) for mod in modifiers]
    return COLUMN_SEP.join(columns)

def process_chord(base_tex, modifier, fingering):
    chord = f'{base_tex}{modifier if modifier != "maj" else ""}'
    return f'{{\gtab{{{chord}}}{{{fingering}}}}}'

with open('src/pdf/chords/chords.csv', 'r') as csvfile, open(OUTFILE or 'src/pdf/chords/chords.tex', 'w+') as outfile:
    readCSV = csv.DictReader(csvfile, delimiter=',')
    rows = [process_row(row) for row in readCSV]
    outfile.write(f'% THIS FILE IS AUTOMATICALLY GENERATED ({sys.argv[0]}). DO NOT EDIT BY HAND.\n\n')
    outfile.write(ROW_SEP.join(rows))
